// Apply necessary plugins
apply plugin: "com.android.application"
apply plugin: "org.jetbrains.kotlin.android"
apply plugin: "com.facebook.react"

// Configuration block for React Native Android app
react {
    // Uncomment and customize as needed
    // root = file("../")
    // reactNativeDir = file("../node_modules/react-native")
    // codegenDir = file("../node_modules/@react-native/codegen")
    // cliFile = file("../node_modules/react-native/cli.js")
    // debuggableVariants = ["liteDebug", "prodDebug"]
    // nodeExecutableAndArgs = ["node"]
    // bundleCommand = "ram-bundle"
    // bundleConfig = file(../rn-cli.config.js)
    // bundleAssetName = "MyApplication.android.bundle"
    // entryFile = file("../js/MyApplication.android.js")
    // extraPackagerArgs = []
    // hermesCommand = "$rootDir/my-custom-hermesc/bin/hermesc"
    // hermesFlags = ["-O", "-output-source-map"]
}

// Set Proguard option
def enableProguardInReleaseBuilds = false

// Set the preferred build flavor of JavaScriptCore (JSC)
def jscFlavor = 'org.webkit:android-jsc:+'

// Android configuration
android {
    ndkVersion rootProject.ext.ndkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    compileSdk rootProject.ext.compileSdkVersion

    // Set namespace
    namespace "com.awesomeproject"
    
    // Configure default settings
    defaultConfig {
        applicationId "com.awesomeproject"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode 1
        versionName "1.0"
    }

    // Configure signing configs for release and debug builds
    signingConfigs {
        release {
            if (project.hasProperty('MYAPP_UPLOAD_STORE_FILE')) {
                storeFile file(MYAPP_UPLOAD_STORE_FILE)
                storePassword MYAPP_UPLOAD_STORE_PASSWORD
                keyAlias MYAPP_UPLOAD_KEY_ALIAS
                keyPassword MYAPP_UPLOAD_KEY_PASSWORD
            }
        }
        debug {
            storeFile file('debug.keystore')
            storePassword 'android'
            keyAlias 'androiddebugkey'
            keyPassword 'android'
        }
    }

    // Configure build types
    buildTypes {
        debug {
            signingConfig signingConfigs.debug
        }
        release {
            signingConfig signingConfigs.release
            minifyEnabled enableProguardInReleaseBuilds
            proguardFiles getDefaultProguardFile("proguard-android.txt"), "proguard-rules.pro"
        }
    }
}

// Dependencies
dependencies {
    implementation("com.facebook.react:react-android")
    implementation("com.facebook.react:flipper-integration")

    // Choose between Hermes and JSC based on configuration
    if (hermesEnabled.toBoolean()) {
        implementation("com.facebook.react:hermes-android")
    } else {
        implementation jscFlavor
    }
}

// Apply native modules
apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle")
applyNativeModulesAppBuildGradle(project)
